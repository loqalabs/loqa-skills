name: Build Skill Docker Image

on:
  workflow_call:
    inputs:
      skill:
        required: true
        type: string

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/loqalabs/skill-${{ inputs.skill }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      if: hashFiles(format('{0}/Dockerfile', inputs.skill)) != ''
      uses: docker/build-push-action@v6
      id: build
      with:
        context: ./${{ inputs.skill }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        sbom: true
        provenance: true

    - name: Generate SBOM
      if: hashFiles(format('{0}/Dockerfile', inputs.skill)) != ''
      uses: anchore/sbom-action@v0
      with:
        image: ${{ env.REGISTRY }}/loqalabs/skill-${{ inputs.skill }}:${{ github.sha }}
        format: spdx-json
        output-file: sbom-${{ inputs.skill }}.spdx.json

    - name: Upload SBOM
      if: hashFiles(format('{0}/Dockerfile', inputs.skill)) != ''
      uses: actions/upload-artifact@v4
      with:
        name: sbom-skill-${{ inputs.skill }}
        path: sbom-${{ inputs.skill }}.spdx.json

    - name: Scan container image
      if: hashFiles(format('{0}/Dockerfile', inputs.skill)) != ''
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/loqalabs/skill-${{ inputs.skill }}:${{ github.sha }}
        format: 'sarif'
        output: 'container-scan-${{ inputs.skill }}-results.sarif'

    - name: Upload container scan results
      if: always() && hashFiles(format('{0}/Dockerfile', inputs.skill)) != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'container-scan-${{ inputs.skill }}-results.sarif'